// Code generated by goctl. DO NOT EDIT.
// Source: example.proto

package server

import (
	"context"

	"github.com/yumo001/simple-learn-rpc/internal/logic/XAddress"
	"github.com/yumo001/simple-learn-rpc/internal/logic/base"
	"github.com/yumo001/simple-learn-rpc/internal/svc"
	"github.com/yumo001/simple-learn-rpc/types/example"
)

type ExampleServer struct {
	svcCtx *svc.ServiceContext
	example.UnimplementedExampleServer
}

func NewExampleServer(svcCtx *svc.ServiceContext) *ExampleServer {
	return &ExampleServer{
		svcCtx: svcCtx,
	}
}

func (s *ExampleServer) InitDatabase(ctx context.Context, in *example.Empty) (*example.BaseResp, error) {
	l := base.NewInitDatabaseLogic(ctx, s.svcCtx)
	return l.InitDatabase(in)
}

// XAddress management
func (s *ExampleServer) CreateXAddress(ctx context.Context, in *example.XAddressInfo) (*example.BaseIDResp, error) {
	l := XAddress.NewCreateXAddressLogic(ctx, s.svcCtx)
	return l.CreateXAddress(in)
}

func (s *ExampleServer) UpdateXAddress(ctx context.Context, in *example.XAddressInfo) (*example.BaseResp, error) {
	l := XAddress.NewUpdateXAddressLogic(ctx, s.svcCtx)
	return l.UpdateXAddress(in)
}

func (s *ExampleServer) GetXAddressList(ctx context.Context, in *example.XAddressListReq) (*example.XAddressListResp, error) {
	l := XAddress.NewGetXAddressListLogic(ctx, s.svcCtx)
	return l.GetXAddressList(in)
}

func (s *ExampleServer) GetXAddressById(ctx context.Context, in *example.IDReq) (*example.XAddressInfo, error) {
	l := XAddress.NewGetXAddressByIdLogic(ctx, s.svcCtx)
	return l.GetXAddressById(in)
}

func (s *ExampleServer) DeleteXAddress(ctx context.Context, in *example.IDsReq) (*example.BaseResp, error) {
	l := XAddress.NewDeleteXAddressLogic(ctx, s.svcCtx)
	return l.DeleteXAddress(in)
}
